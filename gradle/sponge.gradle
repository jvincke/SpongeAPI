// Shared Gradle configuration for the Sponge projects

apply plugin: 'java'
// Plugins for IDE project generation
apply plugin: 'eclipse'
apply plugin: 'idea'

defaultTasks 'licenseFormat', 'build'

group = 'org.spongepowered'
archivesBaseName = project.name.toLowerCase()

// Java version
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
    mavenCentral()
    maven {
        name = 'sponge'
        url = 'http://repo.spongepowered.org/maven'
    }
}

// Testing dependencies
dependencies {
    testCompile 'junit:junit:4.12'
    testCompile 'org.hamcrest:hamcrest-library:1.3'

    testCompile 'org.mockito:mockito-core:1.10.19'
    testCompile 'org.powermock:powermock-module-junit4:1.6.3'
    testCompile 'org.powermock:powermock-api-mockito:1.6.3'
}

// Source compiler configuration
configure([compileJava, compileTestJava]) {
    options.compilerArgs += ['-Xlint:all', '-Xlint:-path']
    options.deprecation = true
    options.encoding = 'UTF-8'
}

test {
    testLogging {
        exceptionFormat = 'full' // Always print full stack trace if something goes wrong in the unit tests
        showStandardStreams = true
    }
}

// Set manifest entries
jar {
    manifest {
        attributes(
                'Built-By': System.properties['user.name'],
                'Created-By': "${System.properties['java.vm.version']} (${System.properties['java.vm.vendor']})",

                'Implementation-Name': project.name,
                'Implementation-Vendor': project.url
        )
    }
}

// The version can change until we're done configuring the project, so delay setting the manifest entries until that is final
afterEvaluate {
    jar.manifest {
        attributes(
                'Implementation-Version': project.version,
                'Git-Commit': project.commit
        )
    }
}

javadoc {
    options.encoding = 'UTF-8'
    options.charSet = 'UTF-8'
    options.links(
            'http://www.slf4j.org/apidocs/',
            'http://docs.guava-libraries.googlecode.com/git-history/v17.0/javadoc/',
            'http://google.github.io/guice/api-docs/latest/javadoc/',
            'http://zml2008.github.io/configurate/configurate-core/apidocs/',
            'http://zml2008.github.io/configurate/configurate-hocon/apidocs/',
            'http://flowpowered.com/math/',
            'http://flowpowered.com/noise/',
            'http://asm.ow2.org/asm50/javadoc/user/',
            'http://docs.oracle.com/javase/6/docs/api/'
    )

    // Disable the crazy super-strict doclint tool in Java 8
    options.addStringOption('Xdoclint:none', '-quiet')
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

// Upload source JAR and javadoc JAR when deploying
// sourceJar is separately configured for SpongeAPI and ForgeGradle projects, so add them after the project is fully configured
afterEvaluate {
    artifacts {
        archives sourceJar
        archives javadocJar
    }
}

// Apply code style plugins
apply plugin: 'license'
apply plugin: 'checkstyle'

// License header formatting
license {
    ext {
        name = project.name
        organization = project.organization
        url = project.url
    }

    header = api.file('HEADER.txt')
    include '**/*.java'

    ignoreFailures = false
    strictCheck = true

    mapping {
        java = 'SLASHSTAR_STYLE'
    }
}

processResources {
    // Include LICENSE in final JAR
    from 'LICENSE.txt'
}

dependencies {
    // TODO: Verify if custom modifications for checkstyle are still necessary (import order, @return on annotations)
    checkstyle 'com.puppycrawl.tools:checkstyle:6.11.2'
}

// Checkstyle settings
checkstyle {
    configFile = api.file('checkstyle.xml')
    configProperties = [
            'basedir': project.projectDir,
            'suppressions': project.file('checkstyle-suppressions.xml'),
            'severity': 'warning'
    ]
}

// Apply deployment configuration
apply from: api.file('gradle/deploy.gradle')

// Gradle version used for generating the Gradle wrapper
task wrapper(type: Wrapper) {
    gradleVersion = '2.9'
}
